# =========================
# GATEWAY LOCAL + CORS PÚBLICO
# Llama a microservicios locales (localhost) y permite front en Vercel
# =========================
server:
  port: 8089

spring:
  application:
    name: ms-gateway

  cloud:
    gateway:
      # CORS GLOBAL (el gateway responde preflight OPTIONS)
      globalcors:
        add-to-simple-url-handler-mapping: true
        corsConfigurations:
          '[/**]':
            # Permite tu front local y dominios públicos de deploy
            allowedOriginPatterns:
              - "https://*.vercel.app"
              - "https://*.ngrok-free.app"
              - "https://*.ngrok.io"
              - "https://*.trycloudflare.com"
              - "http://localhost:5173"
              - "http://127.0.0.1:5173"
            allowedMethods: [GET, POST, PUT, DELETE, OPTIONS]
            allowedHeaders: ["*"]
            exposedHeaders: ["*"]
            # Mantén false si no usas cookies/sesión cruzada
            allowCredentials: false

      # Evita headers CORS duplicados
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin

      # =========================
      # RUTAS DIRECTAS A LOCALES
      # (mantiene apigateway -> micros en tu máquina)
      # =========================
      routes:
        # USUARIO (3020)
        - id: ms-usuario-direct
          uri: http://localhost:3020       # si gateway está en Docker: http://host.docker.internal:3020
          predicates:
            - Path=/api/usuarios/**,/api/auth/**
          filters:
            - StripPrefix=1

        # EVENTOS (3010)
        - id: ms-eventos-direct
          uri: http://localhost:3010
          predicates:
            - Path=/api/eventos/**,/api/peliculas/**,/api/funciones/**
          filters:
            - StripPrefix=1

        # ENTRADAS (3002)
        - id: ms-entradas-direct
          uri: http://localhost:3002
          predicates:
            - Path=/api/entradas/**,/api/reservas/**
          filters:
            - StripPrefix=1

        # ASISTENCIA (8092)
        - id: ms-asistencia-direct
          uri: http://localhost:8092
          predicates:
            - Path=/api/asistencias/**
          filters:
            - StripPrefix=1

        # NOTIFICACIONES (3004)
        - id: ms-notificaciones-direct
          uri: http://localhost:3004
          predicates:
            - Path=/api/notificaciones/**
          filters:
            - StripPrefix=1

# Eureka solo si luego quieres volver a lb:// (no se usa en rutas directas)
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/

management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway

# =========================
# PERFIL OPCIONAL: EUREKA
# Actívalo con: --spring.profiles.active=eureka
# (usa lb:// cuando tus micros ya estén registrados en Eureka)
# =========================
---
spring:
  config:
    activate:
      on-profile: eureka
  cloud:
    gateway:
      routes:
        - id: ms-usuario
          uri: lb://ms-usuario
          predicates: [ Path=/api/usuarios/**,/api/auth/** ]
          filters: [ StripPrefix=1 ]
        - id: ms-eventos
          uri: lb://ms-eventos
          predicates: [ Path=/api/eventos/**,/api/peliculas/**,/api/funciones/** ]
          filters: [ StripPrefix=1 ]
        - id: ms-entradas
          uri: lb://ms-entradas
          predicates: [ Path=/api/entradas/**,/api/reservas/** ]
          filters: [ StripPrefix=1 ]
        - id: ms-asistencia
          uri: lb://ms-asistencia
          predicates: [ Path=/api/asistencias/** ]
          filters: [ StripPrefix=1 ]
        - id: ms-notificaciones
          uri: lb://ms-notificaciones
          predicates: [ Path=/api/notificaciones/** ]
          filters: [ StripPrefix=1 ]
